{"ast":null,"code":"// src/Register.js\nimport React,{useState}from'react';import Button from'@material-ui/core/Button';import Box from'@material-ui/core/Box';import{makeStyles}from'@material-ui/core/styles';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Register(){const[email,setEmail]=useState('');const[emails,setEmails]=useState([]);const useStyles=makeStyles(theme=>({button:{margin:theme.spacing(1),backgroundColor:'red',color:'white','&:hover':{backgroundColor:'darkred'}},box:{borderColor:'red',borderWidth:1,borderStyle:'solid',padding:theme.spacing(1),margin:theme.spacing(1),width:350,backgroundColor:'#f3e5f5'// light purple background\n},center:{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column',height:'100vh',backgroundColor:'#ede7f6'// very light purple background\n},input:{margin:theme.spacing(1),padding:theme.spacing(1),width:'80%',borderRadius:'5px',border:'1px solid #673ab7'// deep purple border\n}}));const classes=useStyles();const handleSubmit=async event=>{event.preventDefault();console.log('API_URL:',process.env.REACT_APP_API_URL);const response=await fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/api/register\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email})});if(response.ok){console.log('Email registered successfully');setEmail('');}else{console.error('Error registering email');const responseData=await response.json();console.error('Response data:',responseData);}};const showEmails=async()=>{const response=await fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/api/emails\"));const data=await response.json();setEmails(data);};return/*#__PURE__*/_jsxs(\"div\",{className:classes.center,children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",className:classes.button,children:\"Register your Email\"})]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",className:classes.button,onClick:showEmails,children:\"Show me the Data\"}),/*#__PURE__*/_jsx(Box,{className:classes.box,children:emails.map(email=>/*#__PURE__*/_jsx(\"p\",{children:email.email},email.id))})]});}export default Register;","map":{"version":3,"names":["React","useState","Button","Box","makeStyles","jsx","_jsx","jsxs","_jsxs","Register","email","setEmail","emails","setEmails","useStyles","theme","button","margin","spacing","backgroundColor","color","box","borderColor","borderWidth","borderStyle","padding","width","center","display","justifyContent","alignItems","flexDirection","height","input","borderRadius","border","classes","handleSubmit","event","preventDefault","console","log","process","env","REACT_APP_API_URL","response","fetch","concat","method","headers","body","JSON","stringify","ok","error","responseData","json","showEmails","data","className","children","onSubmit","type","value","onChange","e","target","required","variant","onClick","map","id"],"sources":["/Users/josemolinatalavera/Coding/Coding_Projects/12_Globaltechno/globaltechno_app/client/src/components/Register.js"],"sourcesContent":["// src/Register.js\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Register() {\n    const [email, setEmail] = useState('');\n    const [emails, setEmails] = useState([]);\n\n    \n\n    const useStyles = makeStyles((theme) => ({\n        button: {\n            margin: theme.spacing(1),\n            backgroundColor: 'red',\n            color: 'white',\n            '&:hover': {\n                backgroundColor: 'darkred',\n            },\n        },\n        box: {\n            borderColor: 'red',\n            borderWidth: 1,\n            borderStyle: 'solid',\n            padding: theme.spacing(1),\n            margin: theme.spacing(1),\n            width: 350,\n            backgroundColor: '#f3e5f5', // light purple background\n        },\n        center: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexDirection: 'column',\n            height: '100vh',\n            backgroundColor: '#ede7f6', // very light purple background\n        },\n        input: {\n            margin: theme.spacing(1),\n            padding: theme.spacing(1),\n            width: '80%',\n            borderRadius: '5px',\n            border: '1px solid #673ab7', // deep purple border\n        },\n    }));\n\n    const classes = useStyles();\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        console.log('API_URL:', process.env.REACT_APP_API_URL);\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/api/register`, {\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ email })\n        });\n\n        if (response.ok) {\n            console.log('Email registered successfully');\n            setEmail('');\n        } else {\n            console.error('Error registering email');\n            const responseData = await response.json();\n            console.error('Response data:', responseData);\n        }\n    };\n\n    const showEmails = async () => {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/api/emails`);\n        const data = await response.json();\n        setEmails(data);\n    };\n\n    return (\n        <div className={classes.center}>\n            <form onSubmit={handleSubmit}>\n                <input type=\"email\" value={email} onChange={e => setEmail(e.target.value)} required />\n                <Button type=\"submit\" variant=\"contained\" className={classes.button}>Register your Email</Button>\n            </form>\n            <Button variant=\"contained\" className={classes.button} onClick={showEmails}>Show me the Data</Button>\n            <Box className={classes.box}>\n                {emails.map(email => (\n                    <p key={email.id}>{email.email}</p>\n                ))}\n            </Box>\n        </div>\n    );\n}\n\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}